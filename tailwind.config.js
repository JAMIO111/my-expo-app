/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    './App.{js,ts,tsx,jsx}',
    './components/**/*.{js,ts,tsx,jsx}',
    './app/**/*.{js,ts,tsx,jsx}',
  ],

  presets: [require('nativewind/preset')],
  darkMode: 'class', // Enable dark mode support
  theme: {
    extend: {
      colors: {
        red: {
          950: '#431407',
        },
        brand: 'var(--color-brand)',
        'brand-light': 'var(--color-brand-light)',
        'brand-dark': 'var(--color-brand-dark)',
        'text-primary': 'var(--color-text-primary)',
        'text-secondary': 'var(--color-text-secondary)',
        'text-error': 'var(--color-text-error)',
        background: 'var(--color-background)',
        'background-light': 'var(--color-background-light)',
        'background-dark': 'var(--color-background-dark)',
        'border-color': 'var(--color-border)',
        'input-background': 'var(--color-input-background)',
        'text-muted': 'var(--color-text-muted)',
        'bg-1': 'rgba(var(--color-bg-1))',
        'bg-2': 'rgba(var(--color-bg-2))',
        'bg-3': 'rgba(var(--color-bg-3))',
        'bg-grouped-1': 'rgba(var(--color-bg-grouped-1))',
        'bg-grouped-2': 'rgba(var(--color-bg-grouped-2))',
        'bg-grouped-3': 'rgba(var(--color-bg-grouped-3))',
        'text-1': 'rgba(var(--color-text-1))',
        'text-2': 'rgba(var(--color-text-2))',
        'text-3': 'rgba(var(--color-text-3))',
        'text-4': 'rgba(var(--color-text-4))',
        'separator-faint': 'rgba(var(--color-separator-faint))',
        separator: 'rgba(var(--color-separator))',
        'separator-opaque': 'rgba(var(--color-separator-opaque))',
        'theme-red': 'rgba(var(--color-red))',
        'theme-orange': 'rgba(var(--color-orange))',
        'theme-yellow': 'rgba(var(--color-yellow))',
        'theme-green': 'rgba(var(--color-green))',
        'theme-mint': 'rgba(var(--color-mint))',
        'theme-teal': 'rgba(var(--color-teal))',
        'theme-cyan': 'rgba(var(--color-cyan))',
        'theme-blue': 'rgba(var(--color-blue))',
        'theme-indigo': 'rgba(var(--color-indigo))',
        'theme-purple': 'rgba(var(--color-purple))',
        'theme-pink': 'rgba(var(--color-pink))',
        'theme-brown': 'rgba(var(--color-brown))',
        'theme-red-hc': 'rgba(var(--color-red-hc))',
        'theme-orange-hc': 'rgba(var(--color-orange-hc))',
        'theme-yellow-hc': 'rgba(var(--color-yellow-hc))',
        'theme-green-hc': 'rgba(var(--color-green-hc))',
        'theme-mint-hc': 'rgba(var(--color-mint-hc))',
        'theme-teal-hc': 'rgba(var(--color-teal-hc))',
        'theme-cyan-hc': 'rgba(var(--color-cyan-hc))',
        'theme-blue-hc': 'rgba(var(--color-blue-hc))',
        'theme-indigo-hc': 'rgba(var(--color-indigo-hc))',
        'theme-purple-hc': 'rgba(var(--color-purple-hc))',
        'theme-pink-hc': 'rgba(var(--color-pink-hc))',
        'theme-brown-hc': 'rgba(var(--color-brown-hc))',
        'theme-gray-1': 'rgba(var(--color-gray-1))',
        'theme-gray-2': 'rgba(var(--color-gray-2))',
        'theme-gray-3': 'rgba(var(--color-gray-3))',
        'theme-gray-4': 'rgba(var(--color-gray-4))',
        'theme-gray-5': 'rgba(var(--color-gray-5))',
        'theme-gray-6': 'rgba(var(--color-gray-6))',
      },
      fontFamily: {
        delagothic: ['Dela Gothic One', 'sans-serif'],
        michroma: ['Michroma', 'sans-serif'],
        saira: ['Saira', 'sans-serif'],
        'saira-bold': ['Saira-Bold', 'sans-serif'],
        'saira-light': ['Saira-Light', 'sans-serif'],
        'saira-medium': ['Saira-Medium', 'sans-serif'],
        'saira-regular': ['Saira-Regular', 'sans-serif'],
        'saira-semibold': ['Saira-SemiBold', 'sans-serif'],
      },
    },
  },
  plugins: [],
};
